(function(){"use strict";TS.registerModule("ms",{fast_reconnects_enabled:true,last_pong_time:0,sent_map:{},connected_sig:new signals.Signal,disconnected_sig:new signals.Signal,trouble_sig:new signals.Signal,reconnecting_sig:new signals.Signal,pong_sig:new signals.Signal,on_msg_sig:new signals.Signal,reconnect_requested_sig:new signals.Signal,num_times_connected:0,is_flannel:false,errors:{BAD_TOKEN:1,CONNECTION_TROUBLE:1006,RATE_LIMIT:-1,UNKNOWN:0},onStart:function(){if(!window.WebSocket){window.WebSocket=window.MozWebSocket;if(!window.WebSocket){alert("Your browser does not support WebSockets.");return}}_setPongTimeoutMs(TS.model.ui.is_window_focused||false);TS.ui.window_focus_changed_sig.add(_setPongTimeoutMs);setInterval(function(){if(!TS.model.ms_connected)return;if(TS.model.rtm_start_throttler<1)return;TS.model.rtm_start_throttler--},1e3*60);var ping_pong_measurement_percentage=10;_measure_ping_pong_latency=TS.boot_data.feature_tinyspeck||TS.utility.enableFeatureForUser(ping_pong_measurement_percentage);_time_since_last_ping_pong_metric=Date.now();if(!TS.boot_data.feature_tinyspeck){_maybeClearImsgLog=_.noop;_maybeAddToImsgLog=_.noop;_maybePrintImsgLog=_.noop}},send:function(msg,handler,temp_ts){msg.id=++_msg_id;TS.ms.sent_map[msg.id.toString()]={msg:msg,handler:handler,ts:Date.now(),temp_ts:temp_ts};if(msg.type=="ping"||msg.type=="pong"){TS.log(3,"MS sending "+msg.type);TS.dir(3,msg)}else{TS.model.last_net_send=Date.now();TS.log(2,"sending "+msg.type);TS.dir(2,msg)}_websocket.send(JSON.stringify(msg));return msg.id},sendTyping:function(c_id){var msg_str='{"type":"typing", "channel":"'+c_id+'"}';_websocket.send(msg_str)},sendTickle:function(){TS.model.last_net_send=Date.now();var msg_str='{"type":"tickle"}';_websocket.send(msg_str)},handleMsg:function(imsg){var is_reconnect_reply=imsg.reply_to&&!("ok"in imsg)&&imsg.type=="message";if(is_reconnect_reply){}var sent;if(imsg.reply_to){if(imsg.reply_to.toString()in TS.ms.sent_map){sent=_processReplyMessage(imsg)}else{if(!is_reconnect_reply){TS.error('received msg "'+imsg.reply_to+'" with type "'+imsg.type+'" but we have no record of it in sent_map')}}}else{if(imsg.event_ts&&!imsg._from_evt_log){TS.ms.storeLastEventTS(imsg.event_ts,"handleMsg")}if(TS.storage.isUsingMemberBotCache()&&imsg.cache_ts){TS.storage.rememberLastCacheTS(imsg.cache_ts)}}var onPong=function(){if(_log_next_pong){_log_next_pong=false;TS.info("Got pong from MS")}TS.ms.last_pong_time=Date.now();TS.ms.pong_sig.dispatch();_check_last_pong_time=false;_maybeClearImsgLog()};if(imsg.type=="ping"||imsg.type=="pong"){if(sent&&sent.ts){TS.log(3,"MS msg "+imsg.type+" time: "+(Date.now()-sent.ts)+" ms")}else{TS.log(3,"MS msg "+imsg.type+" time: "+Date.now()+" ms (no sent.ts)")}if(_measure_ping_pong_latency){if(Date.now()-_time_since_last_ping_pong_metric>_ping_pong_measurement_interval){TS.metrics.measureAndClear("ms_ping_pong_latency","ms_ping_sent");_time_since_last_ping_pong_metric=Date.now()}else{TS.metrics.clearMarks("ms_ping_sent")}}onPong();TS.dir(3,imsg)}else{var time_since_last_pong=Date.now()-TS.ms.last_pong_time;if(_check_last_pong_time&&time_since_last_pong>_implicit_pong_interv_ms){TS.log(3,"MS msg being used as an implicit pong due to excessive delay ("+time_since_last_pong+"ms)");onPong();if(_measure_ping_pong_latency){TS.metrics.clearMarks("ms_ping_sent")}}else{_maybeAddToImsgLog(imsg)}if(sent){var type=imsg.type?imsg.type:imsg.SENT_MSG.type?imsg.SENT_MSG.type:"";TS.log(2,"msg "+(type?'"'+type+'" ':"")+"rsp time "+(Date.now()-sent.ts)+"ms")}else{TS.log(2,'msg "'+imsg.type+'"')}TS.dir(2,imsg)}if(imsg.type=="error"){_onErrorMsg(imsg)}else if(imsg.type=="hello"){_onHello(imsg)}else if(!imsg.reply_to){TS.ms.on_msg_sig.dispatch(imsg)}if(sent){if(!imsg.ok&&imsg.type=="flannel"){imsg.ok=true}if(!imsg.ok){imsg.error=imsg.error||{code:TS.ms.errors.UNKNOWN,msg:"unknown error (not specified by MS)"}}if(is_reconnect_reply){imsg.ok=true}if(sent.handler){sent.handler(imsg.ok,imsg)}}},storeLastEventTS:function(ts,whence){if(!ts)return;var last_event_ts=TS.storage.fetchLastEventTS();if(last_event_ts&&ts<=last_event_ts)return;if(!whence)whence="???";_whence_last_event_ts=whence+" at "+Date.now()/1e3;TS.storage.storeLastEventTS(ts)},onFailure:function(reason_str){TS.warn("TS.ms.onFailure reason_str:"+reason_str);if(reason_str)_reportDisconnect("You got disconnected, so here are some details:\n>>>"+reason_str);_check_last_pong_time=false;_deprecateCurrentSocket();if(TS.model.ms_connected){TS.info("Disconnected from MS, TS.model.rtm_start_throttler:"+TS.model.rtm_start_throttler);TS.ms.logConnectionFlow("on_connected_failure");TS.model.ms_reconnect_ms=100;TS.ms.disconnect()}else{TS.ms.logConnectionFlow("on_notconnected_failure");var ms=TS.model.ms_reconnect_ms=(TS.model.ms_reconnect_ms+1e3)*2;if(TS.model.ms_reconnect_ms>4e3){TS.model.ms_reconnect_ms=_.random(ms,ms+ms/2)}TS.model.ms_reconnect_ms=Math.min(TS.model.ms_reconnect_ms,3e5)}if(TS.model.rtm_start_throttler>5){var min_ms=2e3*TS.model.rtm_start_throttler;if(TS.model.ms_reconnect_ms<min_ms){TS.info("because TS.model.rtm_start_throttler:"+TS.model.rtm_start_throttler+" we are increasing time until next login call");TS.model.ms_reconnect_ms=min_ms}}if(TS.model.ms_connected){TS.model.ms_connected=false;TS.ms.disconnected_sig.dispatch()}TS.model.ms_connected=false;delete TS.ms.is_flannel;clearInterval(_check_ping_interv);clearInterval(_send_ping_interv);if(TS.model.ms_asleep){TS.warn("NOT doing startReconnection(), we are asleep");return}if(TS.api.isPaused()){TS.warn("NOT doing startReconnection() because TS.api.isPaused()");return}TS.ms.startReconnection()},startReconnection:function(){TS.model.ms_reconnect_time=Date.now()+TS.model.ms_reconnect_ms;TS.info("Attempting to reconnect in "+TS.model.ms_reconnect_ms+"ms");clearInterval(_reconnect_interv);_reconnect_interv=setInterval(_onReconnectInterval,_reconnect_interv_ms);_onReconnectInterval();clearTimeout(_auto_reconnect_tim);_auto_reconnect_tim=setTimeout(function(){if(!TS.model.window_unloading){TS.ms.startReconnectionImmediately()}},TS.model.ms_reconnect_ms)},startReconnectionImmediately:function(){clearTimeout(_auto_reconnect_tim);if(TS.model.attempting_fast_reconnect&&_isReconnectUrlValid()){TS.ms.fastReconnect()}else{if(TS.model.attempting_fast_reconnect)_clearReconnectUrl();TS.ms.reconnect_requested_sig.dispatch()}},manualReconnectNow:function(){TS.ms.logConnectionFlow("manual_reconnect");clearTimeout(_auto_reconnect_tim);clearInterval(_reconnect_interv);clearTimeout(_connect_timeout_tim);_connect_timeout_count=0;if(!TS.model.window_unloading){TS.ms.reconnect_requested_sig.dispatch();TS.ms.reconnecting_sig.dispatch(0)}},disconnect:function(){if(_websocket&&TS.model.ms_connected){TS.ms.logConnectionFlow("disconnect");_websocket.close()}else{TS.warn("TS.ms.disconnect called, but _websocket="+_websocket+" TS.model.ms_connected="+TS.model.ms_connected)}},logConnectionFlow:function(name){var ms_conn_log=TS.model.ms_conn_log;var time=Date.now();ms_conn_log.push({name:name,time:time,delta:ms_conn_log.length?time-ms_conn_log[ms_conn_log.length-1].time:0});TS.log(2,"logConnectionFlow "+name+" "+ms_conn_log[ms_conn_log.length-1].delta)},getConnectionFlowLog:function(){var ms_conn_log=TS.model.ms_conn_log;var args=[];for(var i=0;i<ms_conn_log.length;i++){args.push(encodeURIComponent(ms_conn_log[i].name+"-"+(ms_conn_log[i].delta?Math.round(ms_conn_log[i].delta/1e3):0)+"-"+Math.round(ms_conn_log[i].time/1e3)))}TS.dir(2,TS.model.ms_conn_log);var log="_x_connection_log="+args.join(",");return log},CONNECT_TYPE_TOKENLESS:"tokenless",CONNECT_TYPE_RTM_START:"rtm.start",connect:function(url,connection_type){TSConnLogger.log("ms_connecting","TS.ms.connect "+url);if(_did_make_provisional_connection&&!_websocket){_did_make_provisional_connection=false;TS.warn("TS.ms.connect called while _did_make_provisional_connection flag is true, but there is no _websocket. This is a programming error.")}else if(_did_make_provisional_connection){_did_make_provisional_connection=false;if(connection_type!==undefined)return;_handleConnectAfterProvisionalConnection();return}var is_tokenless_connection=connection_type==TS.ms.CONNECT_TYPE_TOKENLESS||connection_type==TS.ms.CONNECT_TYPE_RTM_START;var fetch_rtm_start_over_connection=is_tokenless_connection&&TS.lazyLoadMembers();var did_create=_createNewSocket(url,is_tokenless_connection);if(!did_create){throw new Error("Error creating WebSocket for URL "+url+" (connection type: "+connection_type+")")}TS.model.ms_connecting=true;if(fetch_rtm_start_over_connection){var rtm_start_p=_initSocketHandlersProvisionalRtmStart();return rtm_start_p}if(is_tokenless_connection){_initSocketHandlersProvisional()}else{_initSocketHandlersImmediate()}},fastReconnect:function(){TS.info("Trying fast reconnect");TS.model.calling_test_fast_reconnect=true;TS.api.callImmediately("rtm.checkFastReconnect").then(function(response){var data=response.data;if(TS.reloadIfVersionsChanged(data))return;TS.ms.connect(_reconnect_url)},function(response){var data=response.data;var error=data&&data.error;if(error&&error!=="_http_error")_clearReconnectUrl();TS.ms.onFailure("rtm.checkFastReconnect returned not-OK. error: "+error)}).finally(function(){TS.model.calling_test_fast_reconnect=false})},setReconnectUrl:function(url){_reconnect_url=url;_reconnect_url_received_at=Date.now()},getReconnectUrl:function(){return _reconnect_url},sleep:function(){if(TS.model.ms_asleep)return;if(!TS.model.ms_connected)return;TS.model.ms_asleep=true;TS.ms.disconnect()},wake:function(){if(!TS.model.ms_asleep)return;TS.model.ms_asleep=false;TS.ms.startReconnection()},showConnectionTroubleDialog:function(){TS.generic_dialog.start({title:"Connection trouble",body:"<p>Apologies, we're having some trouble with your web socket connection.</p>				<p>We've seen this problem clear up with a restart of your browser, 				a solution which we suggest to you now only with great regret and self-loathing.</p>",show_cancel_button:false,go_button_text:"OK",esc_for_ok:true})}});var _log_next_pong;var _have_sent_ping=false;var _measure_ping_pong_latency;var _time_since_last_ping_pong_metric;var _ping_pong_measurement_interval=5*60*1e3;var _check_ping_interv=0;var _check_ping_interv_ms=3e3;var _send_ping_interv=0;var _send_ping_interv_ms=1e4;var _implicit_pong_interv_ms=7e3;var _connect_timeout_tim=0;var _connect_timeout_tim_ms=0;var _connect_ws_timeout_tim_ms=1e4;var _connect_flash_timeout_tim_ms=2e4;var _hello_timeout_tim=0;var _hello_timeout_tim_ms=1e4;var _rtm_start_timeout_tim_ms=9e4;var _disconnect_timeout_tim=0;var _disconnect_timeout_tim_ms=5e3;var _reconnect_interv=0;var _reconnect_interv_ms=1e3;var _auto_reconnect_tim=0;var _websocket=null;var _msg_id=0;var _check_last_pong_time=false;var _pong_timeout_ms=0;var _away_limit_ms=3e5;var _connect_timeout_count=0;var _last_slack_broadcast_imsg=null;var _eventlog_per_page=2e3;var _reconnect_url=null;var _reconnect_url_received_at=null;var _last_connect_was_fast=false;var _reconnect_url_limit_ms=3e5;var _whence_last_event_ts;var _setPongTimeoutMs=function(has_focus){if(has_focus){_pong_timeout_ms=1e4}else{_pong_timeout_ms=6e4}_pong_timeout_ms+=_send_ping_interv_ms;TS.log(3,"MS _pong_timeout_ms set to:"+_pong_timeout_ms+" has_focus:"+has_focus)};var _onMsg=function(e){var data=e.data;if(data.charCodeAt(data.length-1)===0){var null_index=data.indexOf("\x00");if(null_index>=0){data=data.slice(0,null_index)}}var imsg=JSON.parse(data);TS.ms.handleMsg(imsg)};var _onConnect=function(e){clearTimeout(_connect_timeout_tim);_connect_timeout_count=0;if(TS.model.attempting_fast_reconnect){_clearReconnectUrl();TS.metrics.measureAndClear("ms_fast_reconnect","ms_websocket_create");_last_connect_was_fast=true}else{TS.metrics.measureAndClear("ms_connect","ms_websocket_create");_last_connect_was_fast=false}if(_did_make_tokenless_connection){TS.ms.send({type:"mp_command",subtype:"login",url:_addQueryParamsToLoginUrl(TS.model.team.url)})}_websocket.onmessage=_onMsg;TS.model.ms_conn_log.length=0;TSConnLogger.log("ms_connected","_onConnect (took "+(Date.now()-TS.ms.last_start_ms)+"ms)");TS.info("MS WS connected!");TS.ms.logConnectionFlow("on_connect");clearTimeout(_hello_timeout_tim);_hello_timeout_tim=setTimeout(_onHelloTimeout,_hello_timeout_tim_ms)};var _finishedProcessingEventLog=function(){if(TS.client)TS.shared.maybeFetchHistoryAndThenCheckConsistency(TS.shared.getActiveModelOb())};var _onEventLogError=function(resp){var args=resp.args;var data=resp.data;TS.error("_onEventLogError "+data);if(TS.client&&data&&data.error=="timestamp_too_old"){TS.storage.cleanOutMsgStorageAndReset();var msg="TS.reload() after a TS.storage.cleanOutMsgStorageAndReset() because data.error: <code>timestamp_too_old</code>";if(data.reason){msg+=" data.reason: <code>"+data.reason+"</code>"}if(args)delete args.token;try{msg+=" args: <pre>"+JSON.stringify(args,null,"	")+"</pre>"}catch(err){}msg+="<p><b>Tell #dhtml about this, please!</b></p>";setTimeout(function(){TS.reload(null,msg)},1);return null}_finishedProcessingEventLog();return null};var _onEventLogOK=function(resp){var data=resp.data;if(!data.events){TS.error("_onEventLogOK missing events");_finishedProcessingEventLog();return null}if(TS.client&&data.has_more){TS.storage.cleanOutMsgStorageAndReset();TS.info("going to call TS.reload() after a TS.storage.cleanOutMsgStorageAndReset() because data.has_more:"+data.has_more+")");setTimeout(function(){TS.reload(null,"TS.reload() after a TS.storage.cleanOutMsgStorageAndReset() because data.has_more:"+data.has_more+")")},1);return null}var last_eventlog_ts;var imsgs_to_handle=[];var uniques_handled={};var unique_str;var _handleEvent=function(imsg){imsg._from_evt_log=true;unique_str=null;last_eventlog_ts=last_eventlog_ts||imsg.event_ts;if(imsg.type=="file_change"&&imsg.file&&imsg.file.id){unique_str=imsg.type+imsg.file.id}else if(imsg.type=="user_change"&&imsg.user&&imsg.user.id){unique_str=imsg.type+imsg.user.id}else if(imsg.type=="emoji_changed"){unique_str=imsg.type}else if(imsg.type=="channel_history_changed"&&imsg.channel){TS.info("eventlog: channel_history_changed for "+imsg.channel);unique_str=imsg.type+imsg.channel}else if(imsg.type=="group_history_changed"&&imsg.channel){TS.info("eventlog: group_history_changed for "+imsg.channel);unique_str=imsg.type+imsg.channel}else if(imsg.type=="im_history_changed"&&imsg.channel){TS.info("eventlog: im_history_changed for "+imsg.channel);unique_str=imsg.type+imsg.channel}if(unique_str){if(uniques_handled[unique_str])return;uniques_handled[unique_str]=true;imsgs_to_handle.unshift(imsg)}else if(imsg.type=="slack_broadcast"){if(!imsg.reload)return;var last=_last_slack_broadcast_imsg;if(last){if(!last.force_reload&&imsg.force_reload){_last_slack_broadcast_imsg=imsg}}else{_last_slack_broadcast_imsg=imsg}}else{imsgs_to_handle.unshift(imsg)}};_.forEachRight(data.events,_handleEvent);imsgs_to_handle.forEach(function(imsg){try{TS.ms.handleMsg(imsg)}catch(e){}});if(last_eventlog_ts){TS.ms.storeLastEventTS(last_eventlog_ts,"eventlog")}if(_last_slack_broadcast_imsg){try{TS.ms.handleMsg(_last_slack_broadcast_imsg)}catch(e){}_last_slack_broadcast_imsg=null}_finishedProcessingEventLog();return null};var _checkPings=function(){if(!_check_last_pong_time)return;var since_last_pong_ms=Date.now()-TS.ms.last_pong_time;TS.log(3,"MS since_last_pong_ms:"+since_last_pong_ms+" pong_timeout_ms:"+_pong_timeout_ms);if(since_last_pong_ms<_pong_timeout_ms)return;TS.warn("since_last_pong_ms too long! "+since_last_pong_ms+" > "+_pong_timeout_ms);_maybePrintImsgLog();_maybeClearImsgLog();TS.warn("calling disconnect(), expect to get an onDisconnect() callback");TS.ms.logConnectionFlow("on_ping_timeout");TS.ms.trouble_sig.dispatch();_check_last_pong_time=false;_reportDisconnect("You are on team Tiny Speck, so here are some pong details:\n>>>"+"since_last_pong_ms too long! "+since_last_pong_ms+" > "+_pong_timeout_ms+" ... calling disconnect(), expect to get an onDisconnect() callback");try{TS.ms.disconnect();clearTimeout(_disconnect_timeout_tim);_disconnect_timeout_tim=setTimeout(function(){TS.info("called disconnect, no onDisconnect callback happened in "+_disconnect_timeout_tim_ms+"ms, so calling _onDisconnect() manually now");_onDisconnect(null,"since_last_pong_ms too long! then called disconnect, but no onDisconnect callback happened in "+_disconnect_timeout_tim_ms+"ms, so calling _onDisconnect() manually now")},_disconnect_timeout_tim_ms)}catch(err){TS.info("since_last_pong_ms too long! then an error calling disconnect, going to assume it is because it is already closed, calling _onDisconnect() manually now");TS.warn(err);_onDisconnect(null,"error calling disconnect, going to assume it is because it is already closed, calling _onDisconnect() manually now")}};var _sendPing=function(){TS.ms.send({type:"ping"});if(_check_last_pong_time&&_have_sent_ping){TS.info("Sent another ping to MS; prior ping was never replied to");_log_next_pong=true}if(_measure_ping_pong_latency)TS.metrics.mark("ms_ping_sent");_check_last_pong_time=true;_have_sent_ping=true};var _onDisconnect=function(e,reason_str){reason_str=reason_str||"_onDisconnect called with event:"+e;TS.info("MS WS disconnected");TS.ms.logConnectionFlow("on_disconnect");clearTimeout(_disconnect_timeout_tim);clearTimeout(_hello_timeout_tim);clearTimeout(_connect_timeout_tim);_did_make_tokenless_connection=false;_did_make_provisional_connection=false;if(e){TS.info("_onDisconnect event.code:"+e.code);if(e.code==TS.ms.errors.CONNECTION_TROUBLE&&false){TS.generic_dialog.start({title:"Connection trouble error #1006",body:"Apologies, we're having some trouble with your connection. The particular error code indicates that restarting the application might fix it.",show_cancel_button:false,show_go_button:true,go_button_text:"OK",esc_for_ok:true})}}else{TS.info("no event")}if(_isReconnectUrlValid()){TS.model.attempting_fast_reconnect=true}TS.ms.onFailure(reason_str)};var _reportDisconnect=function(reason_str){return};var _deprecateCurrentSocket=function(){if(!_websocket)return;_websocket.onclose=null;_websocket.onerror=null;_websocket.onmessage=null;_websocket.onopen=null;try{_websocket.close()}catch(err){TS.logError(err,"Problem while deprecating current socket")}_websocket=undefined;_did_make_provisional_connection=false};var _onReconnectInterval=function(){var ms=TS.model.ms_reconnect_time-Date.now();var secs=Math.round(ms/1e3);if(secs>=0){TS.ms.reconnecting_sig.dispatch(secs)}if(TS.model.window_unloading){clearInterval(_reconnect_interv)}};var _onHelloTimeout=function(){var desc="socket received no hello msg "+_hello_timeout_tim_ms+"ms after connection";TS.warn(desc);TS.ms.logConnectionFlow("_onHelloTimeout");TS.ms.onFailure(desc)};var _onConnectTimeout=function(){_connect_timeout_count++;var desc="socket not connected "+_connect_timeout_tim_ms+"ms after creation. _connect_timeout_count:"+_connect_timeout_count;TS.warn(desc);TS.ms.logConnectionFlow("_onConnectTimeout");if(_connect_timeout_count==3){if(TS.model.is_chrome_desktop){TS.ms.showConnectionTroubleDialog()}else{TS.generic_dialog.start({title:"Connection trouble",body:"<p>Apologies, we're having some trouble with your web socket connection.</p>					<p>We've seen this problem clear up with a restart of "+(TS.model.is_our_app?"Slack":"your browser")+", 					a solution which we suggest to you now only with great regret and self-loathing.</p>					",show_cancel_button:false,go_button_text:"OK",esc_for_ok:true})}return}else if(_connect_timeout_count==2){if(window.WEB_SOCKET_USING_FLASH){}else if(TS.model.is_chrome_desktop){_connect_ws_timeout_tim_ms=2e4;return}}TS.ms.onFailure(desc)};var _onError=function(e){var err_str="";if(e){if(e.name)err_str+=" e.name="+e.name;if(e.message)err_str+=" e.message="+e.message;if(e.data)err_str+=" e.data="+e.data}TS.warn("_onError err_str: "+err_str);TS.dir(0,e)};var _onErrorMsg=function(imsg){if(imsg.error){if(imsg.error.code==TS.ms.errors.BAD_TOKEN){TS.ms.logConnectionFlow("msg_error_code_1");_clearReconnectUrl()}else{if(imsg.error.code==TS.ms.errors.RATE_LIMIT){TS.client.activateMsgRateLimit({notify_user:true});TS.ms.connected_sig.addOnce(TS.client.deactivateMsgRateLimit)}TS.logError({message:JSON.stringify(imsg)},"_onErrorMsg");TS.ms.onFailure("_onErrorMsg imsg.error:"+imsg.error)}}else{TS.logError({message:imsg?JSON.stringify(imsg):"no imsg?"},"_onErrorMsg")}};var _onHello=function(imsg){clearTimeout(_hello_timeout_tim);TS.ms.is_flannel=!!imsg.flannel;TSConnLogger.log("ms_hello","_onHello (took "+(Date.now()-TS.ms.last_start_ms)+"ms)");var since_last_pong_ms=Date.now()-TS.ms.last_pong_time;TS.info("Hello msg recvd, since_last_pong_ms:"+since_last_pong_ms);TS.ms.logConnectionFlow("on_hello");if(TS.client&&since_last_pong_ms>_away_limit_ms&&!_last_connect_was_fast){TS.client.ui.maybePromptForSetActive()}clearInterval(_reconnect_interv);_check_last_pong_time=true;TS.ms.last_pong_time=Date.now();clearInterval(_check_ping_interv);_check_ping_interv=setInterval(_checkPings,_check_ping_interv_ms);clearInterval(_send_ping_interv);_send_ping_interv=setInterval(_sendPing,_send_ping_interv_ms);TS.model.ms_connecting=false;TS.model.ms_connected=true;var last_event_ts=TS.storage.fetchLastEventTS();if(last_event_ts&&!_last_connect_was_fast){TS.info("calling eventlog.history with start:"+last_event_ts+" (from TS.storage.fetchLastEventTS())");if(_whence_last_event_ts)TS.info("last_event_ts is from "+_whence_last_event_ts);TS.api.callImmediately("eventlog.history",{start:last_event_ts,count:_eventlog_per_page}).then(_onEventLogOK).catch(_onEventLogError).finally(_.noop)}else{if(TS.client)TS.shared.maybeFetchHistoryAndThenCheckConsistency(TS.shared.getActiveModelOb())}TS.ms.connected_sig.dispatch(_last_connect_was_fast);TS.ms.num_times_connected++;_sendPing()};var _isReconnectUrlValid=function(){if(!TS.ms.fast_reconnects_enabled)return false;if(!_reconnect_url)return false;var now=Date.now();var reconnect_url_age=now-_reconnect_url_received_at;if(reconnect_url_age<_reconnect_url_limit_ms)return true;_clearReconnectUrl();return false};var _clearReconnectUrl=function(){TS.model.attempting_fast_reconnect=false;_reconnect_url=null;_reconnect_url_received_at=null};var _onConnectProvisional;var _onDisconnectProvisional;var _onErrorProvisional;var _onMsgProvisional;var _did_make_provisional_connection;var _did_make_tokenless_connection;var _makeBufferHandler=function(fn){var buf=[];var handler=function(){if(typeof fn=="function"){var should_buffer=fn.apply(this,arguments);if(should_buffer===false)return}buf.push({this_arg:this,args:arguments})};handler.replay=function(handler){buf.forEach(function(invocation){handler.apply(invocation.this_arg,invocation.args)});buf.length=0};return handler};var _startConnectTimeout=function(){_connect_timeout_tim_ms=window.WEB_SOCKET_USING_FLASH?_connect_flash_timeout_tim_ms:_connect_ws_timeout_tim_ms;clearTimeout(_connect_timeout_tim);_connect_timeout_tim=setTimeout(_onConnectTimeout,_connect_timeout_tim_ms)};var _addQueryParamsToLoginUrl=function(url){url=TS.utility.url.setUrlQueryStringValue(url,"version_uid",TS.boot_data.version_uid);url=TS.utility.appendLogToUrlWithLimit(url,TS.ms.getConnectionFlowLog());url=TS.utility.url.setUrlQueryStringValue(url,"batch_presence_aware",1);return url};var _pong_log=[];var _maybePrintImsgLog=function(){TS.info("Previous imsg events:\n========"+_pong_log.join("\n")+"========")};var _maybeClearImsgLog=function(){_pong_log.length=0};var _maybeAddToImsgLog=function(imsg){imsg=imsg.SENT_MSG||imsg;var msg_desc=imsg.subtype?imsg.type+"."+imsg.subtype:imsg.type;_pong_log.push(TS.makeLogDate()+msg_desc)};var _handleConnectAfterProvisionalConnection=function(){if(_websocket.readyState!=WebSocket.OPEN){_startConnectTimeout()}_onConnectProvisional.replay(_onConnect);_onDisconnectProvisional.replay(_onDisconnect);_onErrorProvisional.replay(_onError);_onMsgProvisional.replay(_onMsg);_websocket.onopen=_onConnect;_websocket.onclose=_onDisconnect;_websocket.onerror=_onError;_onConnectProvisional=undefined;_onDisconnectProvisional=undefined;_onErrorProvisional=undefined;_onMsgProvisional=undefined};var _createNewSocket=function(url,is_tokenless_connection){if(_websocket&&_websocket.readyState==WebSocket.OPEN){TS.error("TS.ms.connect called but we are already connected. This is a programming error.");return false}if(!url)url=TS.model.team.url;if(TS.boot_data.feature_flannel_fe||TS.lazyLoadMembers()){url=TS.utility.url.setUrlQueryStringValue(url,"flannel",1);url=TS.utility.url.setUrlQueryStringValue(url,"token",TS.boot_data.api_token);TS.log(1989,"Connecting to Flannel..."+url)}TS.ms.logConnectionFlow("connect");TS.info("Connecting to: "+url);if(is_tokenless_connection){clearTimeout(_connect_timeout_tim)}else{_startConnectTimeout();url=_addQueryParamsToLoginUrl(url)}TS.ms.last_url=url;TS.ms.last_start_ms=Date.now();TS.metrics.mark("ms_websocket_create");try{_websocket=new WebSocket(url)}catch(error){TS.warn("failed to create new WebSocket");TS.error(error);TS.ms.onFailure("failed to create new WebSocket");return false}return true};var _initSocketHandlersProvisional=function(){_did_make_provisional_connection=true;_did_make_tokenless_connection=true;_onConnectProvisional=_makeBufferHandler();_onDisconnectProvisional=_makeBufferHandler();_onErrorProvisional=_makeBufferHandler();_onMsgProvisional=_makeBufferHandler();_websocket.onclose=_onDisconnectProvisional;_websocket.onerror=_onErrorProvisional;_websocket.onmessage=_onMsgProvisional;_websocket.onopen=_onConnectProvisional};var _initSocketHandlersProvisionalRtmStart=function(){_did_make_provisional_connection=true;_did_make_tokenless_connection=true;var rtm_start_p=new Promise(function(resolve,reject){var abortRtmStartAttempt=function(err){TS.warn("Giving up on rtm.start-over-MS attempt");clearTimeout(rtm_start_timeout);rtm_start_timeout=undefined;TS.ms.fast_reconnects_enabled=true;if(rtm_start_p&&!rtm_start_p.isPending()){TS.warn("Timeout fired after promise has been rejected; this is a programming error.");return}reject(err);_deprecateCurrentSocket()};var rtm_start_timeout=setTimeout(function(){abortRtmStartAttempt(new Error("Waited "+_rtm_start_timeout_tim_ms+" ms for rtm.start response but didn't get one"))},_rtm_start_timeout_tim_ms);_onConnectProvisional=_makeBufferHandler();_onDisconnectProvisional=_makeBufferHandler(function(){if(rtm_start_p&&rtm_start_p.isPending()){abortRtmStartAttempt(new Error("WebSocket got disconnected"))}});_onErrorProvisional=_makeBufferHandler(function(){if(rtm_start_p&&rtm_start_p.isPending()){abortRtmStartAttempt(new Error("WebSocket received an error"))}});_onMsgProvisional=_makeBufferHandler(function(e){var imsg=JSON.parse(e.data);if(imsg.type=="flannel"&&imsg.subtype=="query_response"){if(!imsg.reply_to){TS.error("Received a pre-connection Flannel query response without a reply_to field: "+e.data);return}else if(!TS.ms.sent_map[imsg.reply_to.toString()]){TS.error("Received a pre-connection Flannel query response for a query we did not send: "+e.data);return}var original_sent_msg=_processReplyMessage(imsg);if(original_sent_msg&&_.isFunction(original_sent_msg.handler)){original_sent_msg.handler(imsg.ok,imsg)}return false}if(rtm_start_p&&rtm_start_p.isPending()){if(imsg.type=="hello"){clearTimeout(rtm_start_timeout);rtm_start_timeout=undefined;if(imsg.flannel&&imsg.start){var rtm_start_data=imsg.start;resolve(rtm_start_data)}else{abortRtmStartAttempt(new Error("`hello` imsg did not include rtm.start data"))}}}});_websocket.onclose=_onDisconnectProvisional;_websocket.onerror=_onErrorProvisional;_websocket.onmessage=_onMsgProvisional;_websocket.onopen=_onConnectProvisional});return rtm_start_p};var _initSocketHandlersImmediate=function(){_websocket.onopen=_onConnect;_websocket.onclose=_onDisconnect;_websocket.onerror=_onError};var _processReplyMessage=function(imsg){if(!imsg.reply_to)return;var sent=TS.ms.sent_map[imsg.reply_to];if(!sent)return;imsg.SENT_MSG=sent.msg;delete TS.ms.sent_map[imsg.reply_to];return sent}})();
